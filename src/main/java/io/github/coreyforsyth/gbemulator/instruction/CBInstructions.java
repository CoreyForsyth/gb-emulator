package io.github.coreyforsyth.gbemulator.instruction;

import io.github.coreyforsyth.gbemulator.Accessor;
import io.github.coreyforsyth.gbemulator.CPU;
import lombok.extern.slf4j.Slf4j;

@Slf4j
public class CBInstructions
{
    public static Instruction<?, ?>[] instructions = new Instruction[0x100];
    private static final Instruction<Void, Void> nop = new Instruction<>(null, null)
    {
        @Override
        public void accept(CPU cpu)
        {

        }
    };

    static  {
        instructions[0x00] = new RLC(Accessor.B);
        instructions[0x01] = new RLC(Accessor.C);
        instructions[0x02] = new RLC(Accessor.D);
        instructions[0x03] = new RLC(Accessor.E);
        instructions[0x04] = new RLC(Accessor.H);
        instructions[0x05] = new RLC(Accessor.L);
        instructions[0x06] = new RLC(Accessor.ADR_HL);
        instructions[0x07] = new RLC(Accessor.A);
        instructions[0x08] = new RRC(Accessor.B);
        instructions[0x09] = new RRC(Accessor.C);
        instructions[0x0A] = new RRC(Accessor.D);
        instructions[0x0B] = new RRC(Accessor.E);
        instructions[0x0C] = new RRC(Accessor.H);
        instructions[0x0D] = new RRC(Accessor.L);
        instructions[0x0E] = new RRC(Accessor.ADR_HL);
        instructions[0x0F] = new RRC(Accessor.A);
        instructions[0x10] = new RL(Accessor.B);
        instructions[0x11] = new RL(Accessor.C);
        instructions[0x12] = new RL(Accessor.D);
        instructions[0x13] = new RL(Accessor.E);
        instructions[0x14] = new RL(Accessor.H);
        instructions[0x15] = new RL(Accessor.L);
        instructions[0x16] = new RL(Accessor.ADR_HL);
        instructions[0x17] = new RL(Accessor.A);
        instructions[0x18] = new RR(Accessor.B);
        instructions[0x19] = new RR(Accessor.C);
        instructions[0x1A] = new RR(Accessor.D);
        instructions[0x1B] = new RR(Accessor.E);
        instructions[0x1C] = new RR(Accessor.H);
        instructions[0x1D] = new RR(Accessor.L);
        instructions[0x1E] = new RR(Accessor.ADR_HL);
        instructions[0x1F] = new RR(Accessor.A);
        instructions[0x20] = new SLA(Accessor.B);
        instructions[0x21] = new SLA(Accessor.C);
        instructions[0x22] = new SLA(Accessor.D);
        instructions[0x23] = new SLA(Accessor.E);
        instructions[0x24] = new SLA(Accessor.H);
        instructions[0x25] = new SLA(Accessor.L);
        instructions[0x26] = new SLA(Accessor.ADR_HL);
        instructions[0x27] = new SLA(Accessor.A);
        instructions[0x28] = new SRA(Accessor.B);
        instructions[0x29] = new SRA(Accessor.C);
        instructions[0x2A] = new SRA(Accessor.D);
        instructions[0x2B] = new SRA(Accessor.E);
        instructions[0x2C] = new SRA(Accessor.H);
        instructions[0x2D] = new SRA(Accessor.L);
        instructions[0x2E] = new SRA(Accessor.ADR_HL);
        instructions[0x2F] = new SRA(Accessor.A);
        instructions[0x30] = new SWAP(Accessor.B);
        instructions[0x31] = new SWAP(Accessor.C);
        instructions[0x32] = new SWAP(Accessor.D);
        instructions[0x33] = new SWAP(Accessor.E);
        instructions[0x34] = new SWAP(Accessor.H);
        instructions[0x35] = new SWAP(Accessor.L);
        instructions[0x36] = new SWAP(Accessor.ADR_HL);
        instructions[0x37] = new SWAP(Accessor.A);
        instructions[0x38] = new SRL(Accessor.B);
        instructions[0x39] = new SRL(Accessor.C);
        instructions[0x3A] = new SRL(Accessor.D);
        instructions[0x3B] = new SRL(Accessor.E);
        instructions[0x3C] = new SRL(Accessor.H);
        instructions[0x3D] = new SRL(Accessor.L);
        instructions[0x3E] = new SRL(Accessor.ADR_HL);
        instructions[0x3F] = new SRL(Accessor.A);
        instructions[0x40] = new BIT(Accessor.B, 0);
        instructions[0x41] = new BIT(Accessor.C, 0);
        instructions[0x42] = new BIT(Accessor.D, 0);
        instructions[0x43] = new BIT(Accessor.E, 0);
        instructions[0x44] = new BIT(Accessor.H, 0);
        instructions[0x45] = new BIT(Accessor.L, 0);
        instructions[0x46] = new BIT(Accessor.ADR_HL, 0);
        instructions[0x47] = new BIT(Accessor.A, 0);
        instructions[0x48] = new BIT(Accessor.B, 1);
        instructions[0x49] = new BIT(Accessor.C, 1);
        instructions[0x4A] = new BIT(Accessor.D, 1);
        instructions[0x4B] = new BIT(Accessor.E, 1);
        instructions[0x4C] = new BIT(Accessor.H, 1);
        instructions[0x4D] = new BIT(Accessor.L, 1);
        instructions[0x4E] = new BIT(Accessor.ADR_HL, 1);
        instructions[0x4F] = new BIT(Accessor.A, 1);
        instructions[0x50] = new BIT(Accessor.B, 2);
        instructions[0x51] = new BIT(Accessor.C, 2);
        instructions[0x52] = new BIT(Accessor.D, 2);
        instructions[0x53] = new BIT(Accessor.E, 2);
        instructions[0x54] = new BIT(Accessor.H, 2);
        instructions[0x55] = new BIT(Accessor.L, 2);
        instructions[0x56] = new BIT(Accessor.ADR_HL, 2);
        instructions[0x57] = new BIT(Accessor.A, 2);
        instructions[0x58] = new BIT(Accessor.B, 3);
        instructions[0x59] = new BIT(Accessor.C, 3);
        instructions[0x5A] = new BIT(Accessor.D, 3);
        instructions[0x5B] = new BIT(Accessor.E, 3);
        instructions[0x5C] = new BIT(Accessor.H, 3);
        instructions[0x5D] = new BIT(Accessor.L, 3);
        instructions[0x5E] = new BIT(Accessor.ADR_HL, 3);
        instructions[0x5F] = new BIT(Accessor.A, 3);
        instructions[0x60] = new BIT(Accessor.B, 4);
        instructions[0x61] = new BIT(Accessor.C, 4);
        instructions[0x62] = new BIT(Accessor.D, 4);
        instructions[0x63] = new BIT(Accessor.E, 4);
        instructions[0x64] = new BIT(Accessor.H, 4);
        instructions[0x65] = new BIT(Accessor.L, 4);
        instructions[0x66] = new BIT(Accessor.ADR_HL, 4);
        instructions[0x67] = new BIT(Accessor.A, 4);
        instructions[0x68] = new BIT(Accessor.B, 5);
        instructions[0x69] = new BIT(Accessor.C, 5);
        instructions[0x6A] = new BIT(Accessor.D, 5);
        instructions[0x6B] = new BIT(Accessor.E, 5);
        instructions[0x6C] = new BIT(Accessor.H, 5);
        instructions[0x6D] = new BIT(Accessor.L, 5);
        instructions[0x6E] = new BIT(Accessor.ADR_HL, 5);
        instructions[0x6F] = new BIT(Accessor.A, 5);
        instructions[0x70] = new BIT(Accessor.B, 6);
        instructions[0x71] = new BIT(Accessor.C, 6);
        instructions[0x72] = new BIT(Accessor.D, 6);
        instructions[0x73] = new BIT(Accessor.E, 6);
        instructions[0x74] = new BIT(Accessor.H, 6);
        instructions[0x75] = new BIT(Accessor.L, 6);
        instructions[0x76] = new BIT(Accessor.ADR_HL, 6);
        instructions[0x77] = new BIT(Accessor.A, 6);
        instructions[0x78] = new BIT(Accessor.B, 7);
        instructions[0x79] = new BIT(Accessor.C, 7);
        instructions[0x7A] = new BIT(Accessor.D, 7);
        instructions[0x7B] = new BIT(Accessor.E, 7);
        instructions[0x7C] = new BIT(Accessor.H, 7);
        instructions[0x7D] = new BIT(Accessor.L, 7);
        instructions[0x7E] = new BIT(Accessor.ADR_HL, 7);
        instructions[0x7F] = new BIT(Accessor.A, 7);
        instructions[0x80] = new RES(Accessor.B, 0b11111110);
        instructions[0x81] = new RES(Accessor.C, 0b11111110);
        instructions[0x82] = new RES(Accessor.D, 0b11111110);
        instructions[0x83] = new RES(Accessor.E, 0b11111110);
        instructions[0x84] = new RES(Accessor.H, 0b11111110);
        instructions[0x85] = new RES(Accessor.L, 0b11111110);
        instructions[0x86] = new RES(Accessor.ADR_HL, 0b11111110);
        instructions[0x87] = new RES(Accessor.A, 0b11111110);
        instructions[0x88] = new RES(Accessor.B, 0b11111101);
        instructions[0x89] = new RES(Accessor.C, 0b11111101);
        instructions[0x8A] = new RES(Accessor.D, 0b11111101);
        instructions[0x8B] = new RES(Accessor.E, 0b11111101);
        instructions[0x8C] = new RES(Accessor.H, 0b11111101);
        instructions[0x8D] = new RES(Accessor.L, 0b11111101);
        instructions[0x8E] = new RES(Accessor.ADR_HL, 0b11111101);
        instructions[0x8F] = new RES(Accessor.A, 0b11111101);
        instructions[0x90] = new RES(Accessor.B, 0b11111011);
        instructions[0x91] = new RES(Accessor.C, 0b11111011);
        instructions[0x92] = new RES(Accessor.D, 0b11111011);
        instructions[0x93] = new RES(Accessor.E, 0b11111011);
        instructions[0x94] = new RES(Accessor.H, 0b11111011);
        instructions[0x95] = new RES(Accessor.L, 0b11111011);
        instructions[0x96] = new RES(Accessor.ADR_HL, 0b11111011);
        instructions[0x97] = new RES(Accessor.A, 0b11111011);
        instructions[0x98] = new RES(Accessor.B, 0b11110111);
        instructions[0x99] = new RES(Accessor.C, 0b11110111);
        instructions[0x9A] = new RES(Accessor.D, 0b11110111);
        instructions[0x9B] = new RES(Accessor.E, 0b11110111);
        instructions[0x9C] = new RES(Accessor.H, 0b11110111);
        instructions[0x9D] = new RES(Accessor.L, 0b11110111);
        instructions[0x9E] = new RES(Accessor.ADR_HL, 0b11110111);
        instructions[0x9F] = new RES(Accessor.A, 0b11110111);
        instructions[0xA0] = new RES(Accessor.B, 0b11101111);
        instructions[0xA1] = new RES(Accessor.C, 0b11101111);
        instructions[0xA2] = new RES(Accessor.D, 0b11101111);
        instructions[0xA3] = new RES(Accessor.E, 0b11101111);
        instructions[0xA4] = new RES(Accessor.H, 0b11101111);
        instructions[0xA5] = new RES(Accessor.L, 0b11101111);
        instructions[0xA6] = new RES(Accessor.ADR_HL, 0b11101111);
        instructions[0xA7] = new RES(Accessor.A, 0b11101111);
        instructions[0xA8] = new RES(Accessor.B, 0b11011111);
        instructions[0xA9] = new RES(Accessor.C, 0b11011111);
        instructions[0xAA] = new RES(Accessor.D, 0b11011111);
        instructions[0xAB] = new RES(Accessor.E, 0b11011111);
        instructions[0xAC] = new RES(Accessor.H, 0b11011111);
        instructions[0xAD] = new RES(Accessor.L, 0b11011111);
        instructions[0xAE] = new RES(Accessor.ADR_HL, 0b11011111);
        instructions[0xAF] = new RES(Accessor.A, 0b11011111);
        instructions[0xB0] = new RES(Accessor.B, 0b10111111);
        instructions[0xB1] = new RES(Accessor.C, 0b10111111);
        instructions[0xB2] = new RES(Accessor.D, 0b10111111);
        instructions[0xB3] = new RES(Accessor.E, 0b10111111);
        instructions[0xB4] = new RES(Accessor.H, 0b10111111);
        instructions[0xB5] = new RES(Accessor.L, 0b10111111);
        instructions[0xB6] = new RES(Accessor.ADR_HL, 0b10111111);
        instructions[0xB7] = new RES(Accessor.A, 0b10111111);
        instructions[0xB8] = new RES(Accessor.B, 0b01111111);
        instructions[0xB9] = new RES(Accessor.C, 0b01111111);
        instructions[0xBA] = new RES(Accessor.D, 0b01111111);
        instructions[0xBB] = new RES(Accessor.E, 0b01111111);
        instructions[0xBC] = new RES(Accessor.H, 0b01111111);
        instructions[0xBD] = new RES(Accessor.L, 0b01111111);
        instructions[0xBE] = new RES(Accessor.ADR_HL, 0b01111111);
        instructions[0xBF] = new RES(Accessor.A, 0b01111111);
        instructions[0xC0] = new SET(Accessor.B, 0b00000001);
        instructions[0xC1] = new SET(Accessor.C, 0b00000001);
        instructions[0xC2] = new SET(Accessor.D, 0b00000001);
        instructions[0xC3] = new SET(Accessor.E, 0b00000001);
        instructions[0xC4] = new SET(Accessor.H, 0b00000001);
        instructions[0xC5] = new SET(Accessor.L, 0b00000001);
        instructions[0xC6] = new SET(Accessor.ADR_HL, 0b00000001);
        instructions[0xC7] = new SET(Accessor.A, 0b00000001);
        instructions[0xC8] = new SET(Accessor.B, 0b00000010);
        instructions[0xC9] = new SET(Accessor.C, 0b00000010);
        instructions[0xCA] = new SET(Accessor.D, 0b00000010);
        instructions[0xCB] = new SET(Accessor.E, 0b00000010);
        instructions[0xCC] = new SET(Accessor.H, 0b00000010);
        instructions[0xCD] = new SET(Accessor.L, 0b00000010);
        instructions[0xCE] = new SET(Accessor.ADR_HL, 0b00000010);
        instructions[0xCF] = new SET(Accessor.A, 0b00000010);
        instructions[0xD0] = new SET(Accessor.B, 0b00000100);
        instructions[0xD1] = new SET(Accessor.C, 0b00000100);
        instructions[0xD2] = new SET(Accessor.D, 0b00000100);
        instructions[0xD3] = new SET(Accessor.E, 0b00000100);
        instructions[0xD4] = new SET(Accessor.H, 0b00000100);
        instructions[0xD5] = new SET(Accessor.L, 0b00000100);
        instructions[0xD6] = new SET(Accessor.ADR_HL, 0b00000100);
        instructions[0xD7] = new SET(Accessor.A, 0b00000100);
        instructions[0xD8] = new SET(Accessor.B, 0b00001000);
        instructions[0xD9] = new SET(Accessor.C, 0b00001000);
        instructions[0xDA] = new SET(Accessor.D, 0b00001000);
        instructions[0xDB] = new SET(Accessor.E, 0b00001000);
        instructions[0xDC] = new SET(Accessor.H, 0b00001000);
        instructions[0xDD] = new SET(Accessor.L, 0b00001000);
        instructions[0xDE] = new SET(Accessor.ADR_HL, 0b00001000);
        instructions[0xDF] = new SET(Accessor.A, 0b00001000);
        instructions[0xE0] = new SET(Accessor.B, 0b00010000);
        instructions[0xE1] = new SET(Accessor.C, 0b00010000);
        instructions[0xE2] = new SET(Accessor.D, 0b00010000);
        instructions[0xE3] = new SET(Accessor.E, 0b00010000);
        instructions[0xE4] = new SET(Accessor.H, 0b00010000);
        instructions[0xE5] = new SET(Accessor.L, 0b00010000);
        instructions[0xE6] = new SET(Accessor.ADR_HL, 0b00010000);
        instructions[0xE7] = new SET(Accessor.A, 0b00010000);
        instructions[0xE8] = new SET(Accessor.B, 0b00100000);
        instructions[0xE9] = new SET(Accessor.C, 0b00100000);
        instructions[0xEA] = new SET(Accessor.D, 0b00100000);
        instructions[0xEB] = new SET(Accessor.E, 0b00100000);
        instructions[0xEC] = new SET(Accessor.H, 0b00100000);
        instructions[0xED] = new SET(Accessor.L, 0b00100000);
        instructions[0xEE] = new SET(Accessor.ADR_HL, 0b00100000);
        instructions[0xEF] = new SET(Accessor.A, 0b00100000);
        instructions[0xF0] = new SET(Accessor.B, 0b01000000);
        instructions[0xF1] = new SET(Accessor.C, 0b01000000);
        instructions[0xF2] = new SET(Accessor.D, 0b01000000);
        instructions[0xF3] = new SET(Accessor.E, 0b01000000);
        instructions[0xF4] = new SET(Accessor.H, 0b01000000);
        instructions[0xF5] = new SET(Accessor.L, 0b01000000);
        instructions[0xF6] = new SET(Accessor.ADR_HL, 0b01000000);
        instructions[0xF7] = new SET(Accessor.A, 0b01000000);
        instructions[0xF8] = new SET(Accessor.B, 0b10000000);
        instructions[0xF9] = new SET(Accessor.C, 0b10000000);
        instructions[0xFA] = new SET(Accessor.D, 0b10000000);
        instructions[0xFB] = new SET(Accessor.E, 0b10000000);
        instructions[0xFC] = new SET(Accessor.H, 0b10000000);
        instructions[0xFD] = new SET(Accessor.L, 0b10000000);
        instructions[0xFE] = new SET(Accessor.ADR_HL, 0b10000000);
        instructions[0xFF] = new SET(Accessor.A, 0b10000000);
    }

    public static byte next(CPU cpu) {
        byte b = cpu.nextByte();
        Instruction<?, ?> instruction = instructions[b & 0xFF];
        if (instruction != nop) {
            instruction.accept(cpu);
        } else {
            System.out.printf("%02X%n", b);
        }
        return b;
    }

    public static Instruction<?, ?> getInstruction(byte b)
    {
        return instructions[b & 0xFF];
    }
}
